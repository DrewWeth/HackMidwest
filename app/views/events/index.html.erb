<style type="text/css">
      #map-canvas { height: 100% }
    </style>
<h1>Listing events</h1>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Desc</th>
      <th>Start</th>
      <th>End</th>
      <th>Location</th>
      <th>adress</th>
      <th>latitude</th>
      <th>longitude</th>
      <th>Is public</th>
      <th colspan="3"></th>
    </tr>
  </thead>

  <tbody>
    <% @events.each do |event| %>
      <tr>
        <td><%= event.name %></td>
        <td><%= event.desc %></td>
        <td><%= event.start.strftime("%B %d, %Y at %I:%M %p"); %></td>
        <td><%= event.end.strftime("%B %d, %Y at %I:%M %p"); %></td>
        <td><%= event.location %></td>
        <td><%= event.address %></td>
        <td><%= event.latitude %></td>
        <td><%= event.longitude %></td>
        <td><%= event.is_public %></td>

        <td><%= link_to 'Show', event %></td>
        <td><%= link_to 'Edit', edit_event_path(event) %></td>
        <td><%= link_to 'Destroy', event, method: :delete, data: { confirm: 'Are you sure?' } %></td>
      </tr>
    <% end %>
  </tbody>
</table>

<br>

<%= link_to 'New Event', new_event_path %>

<div id="map-canvas"/>

<script type="text/javascript">
  var marker;
  var map;

  var infobox;
  var events;

  // initialize the map
  function initialize() {
    // set the user's location
    askForUserLocation();
  }
  
  // script that is called after the dom loads so we can load the app.
  function loadScript() {
    var script = document.createElement('script');
    script.type = 'text/javascript';
    script.src = 'https://maps.googleapis.com/maps/api/js?v=3.exp&' +
      'callback=initialize'; //this is the callback function 
    document.body.appendChild(script);
  }

  function askForUserLocation()
  {
    if (navigator.geolocation) 
    {
      navigator.geolocation.getCurrentPosition(SetUserLocation, error, {maximumAge: 30000, timeout: 10000, enableHighAccuracy: true} );
    }
    else
    {
      alert("Sorry, but it looks like your browser does not support geolocation.");
    }
  }

  function updateMapWithEvents(data){
    console.log("Event data");
    console.log(data);
  }

  function SetUserLocation(position) {
    var latitude = position.coords.latitude;
    var longitude = position.coords.longitude;

    //alert("Your coordinates are " + position.coords.latitude + ", " + position.coords.longitude);

    //create a marker
    var myLatlng = new google.maps.LatLng(latitude,longitude);
    
    //create a new marker
    var user_location_marker = new google.maps.Marker({
      position: myLatlng,
      animation: google.maps.Animation.DROP,
      clickable:true,
      title:"Your location"
    });

        // setup the map options
    var mapOptions = {
      zoom: 19,
      center: new google.maps.LatLng(latitude, longitude)
    };
    
    //set up the map
    map = new google.maps.Map(document.getElementById('map-canvas'),
      mapOptions);

    /* SETUP USER LOCATION */

    //associate the marker with the map
    user_location_marker.setMap(map);

    //add a listener on the user_location_marker and link animation with it
    google.maps.event.addListener(user_location_marker, 'click', function(){
      panAndZoomToLocation(myLatlng, 19);
    });

    /* SETUP EVENTS MARKERS */

    // loop through each event
    for (var index in events){
        
      var a_event = events[index];

      //ccreate the event window for this event
      a_event.infoWindow = new google.maps.InfoWindow({
          content: generateEventInfoWindow(a_event)
      });

      //create the latitude and longitute object
      a_event.latLng = new google.maps.LatLng(a_event.latitude,a_event.longitude);

      //create the marker for the event
      a_event.marker = new google.maps.Marker({
        position: a_event.latLng,
        animation: google.maps.Animation.DROP,
        clickable: true,
        title: a_event.name
      });
    
      //add a listener on the user_location_marker and link animation with it
      google.maps.event.addListener(a_event.marker, 'click', function(){
        a_event.infoWindow.open(map, this);
        panAndZoomToLocation(a_event.latLng, 19);
      });

      //add the marker to the map
      a_event.marker.setMap(map);

      //draw a circle around the latitude and longitude
      drawCircle(a_event.latLng);
    }
  }

  function panAndZoomToLocation(latLng, zoomLevel){
    map.panTo(latLng);
    map.setZoom(zoomLevel);
  }

  function generateEventInfoWindow(a_event){
    var info = '<div id="content">'+
        '<div id="siteNotice">'+
        '</div>'+
        '<h1 id="firstHeading" class="firstHeading">' + a_event.name + '</h1>'+
        '<div id="bodyContent">'+
        '<p><b>Description: </b>' + a_event.desc + '</p>' + 
        '<p><b>Start Date/Time: </b> ' + a_event.start + '</p>' + 
        '<p><b>End Date/Time: </b> ' + a_event.end + '</p>' + 
        '</div>'+
        '</div>';
    // modify this to use the data from the object
    return info;
  }

  function drawCircle(latLong){
    var eventRadiusOptions = {
      strokeColor: '#00bdf5',
      strokeOpacity: 0.8,
      strokeWeight: 1,
      fillColor: '#19a9e0',
      fillOpacity: 0.35,
      map: map,
      center: latLong,
      radius: 30
    };

    // Add the circle for this city to the map.
    var eventCircle = new google.maps.Circle(eventRadiusOptions);
  }

  function error() {
    alert("Cannot locate user");
  }

  function buttonSelected(){
    console.log("Button selected!!!");
  }

  // A $( document ).ready() block.
  $( document ).ready(function() {
      $.ajax({
        url: "http://localhost:3000/events",
        dataType: "json",
        type: "GET",
        processData: false,
        contentType: "application/json"
      }).done(function(data) {
        console.log(data);
        events = data;
        loadScript();
      });
  });
</script>
